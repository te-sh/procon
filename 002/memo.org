#+OPTIONS: num:nil author:nil timestamp:nil

#+HTML_HEAD: <link rel="stylesheet" type="text/css" href="http://www.pirilampo.org/styles/readtheorg/css/htmlize.css"/>
#+HTML_HEAD: <link rel="stylesheet" type="text/css" href="http://www.pirilampo.org/styles/readtheorg/css/readtheorg.css"/>

#+HTML_HEAD: <script src="https://ajax.googleapis.com/ajax/libs/jquery/2.1.3/jquery.min.js"></script>
#+HTML_HEAD: <script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.4/js/bootstrap.min.js"></script>
#+HTML_HEAD: <script type="text/javascript" src="http://www.pirilampo.org/styles/lib/js/jquery.stickytableheaders.js"></script>
#+HTML_HEAD: <script type="text/javascript" src="http://www.pirilampo.org/styles/readtheorg/js/readtheorg.js"></script>

# Local variables:
# after-save-hook: org-html-export-to-html
# end:

** No.51

実装あるのみ。

制約から $D^2$ が =int= を超える可能性があるので =long= を使う。

** No.52

$k$ 回目に前から取るか後ろから取るかで全探索する。

** No.55

$P_1(X1, Y1), P_2(X2, Y2), P_3(X3, Y3)$ とする。

$P_1,P_2,P_3$ の順序を入れ替えて、すべての入れ替えパターンで正方形が1つでもできるかどうかを調べる。

$\vec{v_1}=\overrightarrow{P_1P_2}$, $\vec{v_2}=\overrightarrow{P_2P_3}$ とすると、正方形ができるためには次の条件が成り立つ必要がある。

\[ |\vec{v_1}| = |\vec{v_2}| \]

\[ \vec{v_1} \cdot \vec{v_2} = 0 \]

このとき、$P_1, P_4$ の位置ベクトルを $\vec{p_1}, \vec{p_4}$ とすると、

\[ \vec{p_4} = \vec{p_1} + \vec{v_2} \]

となる。

** No.56

\(D(100 + P) / 100\) で求められる。

$D (100 + P)$ が =int= を超える可能性があるので =long= を使う。

** No.57

1つのサイコロを振ったときの出る目の期待値は $3.5$ である。

各サイコロは独立なので、$N$ 個のサイコロを振った時に出る目の和の合計の期待値は各サイコロを振った時の目の和の期待値の合計 $3.5N$ となる。

** No.58

モンテカルロ法を使って実装あるのみ。
